import * as Enums from '../../enums';
import type * as Types from '../../types';
import { vec3 } from 'gl-matrix';
export interface CameraPositionConfig {
    orientation?: Enums.OrientationAxis;
    useViewportNormal?: boolean;
}
export declare function calculateCameraPosition(rowCosineVec: vec3, colCosineVec: vec3, scanAxisNormal: vec3, orientation: Enums.OrientationAxis): {
    viewPlaneNormal: [number, number, number];
    viewUp: [number, number, number];
    viewRight: [number, number, number];
};
export declare function getCameraVectors(viewport: Types.IBaseVolumeViewport, config?: CameraPositionConfig): {
    viewPlaneNormal: [number, number, number];
    viewUp: [number, number, number];
    viewRight: [number, number, number];
};
export declare function getOrientationFromScanAxisNormal(scanAxisNormal: vec3): Enums.OrientationAxis;
