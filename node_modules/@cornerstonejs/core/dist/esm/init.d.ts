import type { Cornerstone3DConfig } from './types';
import CentralizedWebWorkerManager from './webWorkerManager/webWorkerManager';
declare function init(configuration?: Cornerstone3DConfig): boolean;
declare function getCanUseNorm16Texture(): boolean;
declare function setUseCPURendering(status: boolean, updateViewports?: boolean): void;
declare function setPreferSizeOverAccuracy(status: boolean): void;
declare function canRenderFloatTextures(): boolean;
declare function resetUseCPURendering(): void;
declare function getShouldUseCPURendering(): boolean;
declare function isCornerstoneInitialized(): boolean;
declare function resetInitialization(): void;
declare function getConfiguration(): Cornerstone3DConfig;
declare function setConfiguration(c: Cornerstone3DConfig): void;
declare function getWebWorkerManager(): CentralizedWebWorkerManager;
declare function peerImport(moduleId: string): Promise<any>;
export { init, getShouldUseCPURendering, isCornerstoneInitialized, setUseCPURendering, setPreferSizeOverAccuracy, resetUseCPURendering, getConfiguration, setConfiguration, getWebWorkerManager, canRenderFloatTextures, peerImport, resetInitialization, getCanUseNorm16Texture, };
