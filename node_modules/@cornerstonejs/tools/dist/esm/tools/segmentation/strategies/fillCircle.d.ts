import type { Types } from '@cornerstonejs/core';
import type vtkImageData from '@kitware/vtk.js/Common/DataModel/ImageData';
import BrushStrategy from './BrushStrategy';
import type { CanvasCoordinates } from '../../../types';
export declare function getEllipseCornersFromCanvasCoordinates(canvasCoordinates: CanvasCoordinates): Array<Types.Point2>;
declare function createPointInEllipse(cornersInWorld?: Types.Point3[], options?: {
    strokePointsWorld?: Types.Point3[];
    segmentationImageData?: vtkImageData;
    radius?: number;
}): (pointLPS: Types.Point3 | null, pointIJK?: Types.Point3) => boolean;
declare const CIRCLE_STRATEGY: BrushStrategy;
declare const CIRCLE_THRESHOLD_STRATEGY: BrushStrategy;
declare const fillInsideCircle: (enabledElement: any, operationData: any) => unknown;
declare const thresholdInsideCircle: (enabledElement: any, operationData: any) => unknown;
export declare function fillOutsideCircle(): void;
export { CIRCLE_STRATEGY, CIRCLE_THRESHOLD_STRATEGY, fillInsideCircle, thresholdInsideCircle, createPointInEllipse, createPointInEllipse as createEllipseInPoint, };
